digraph "CFG for 'set_char_quoting' function" {
	label="CFG for 'set_char_quoting' function";

	Node0x555555847ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = alloca %struct.quoting_options*, align 8\l  %5 = alloca i8, align 1\l  %6 = alloca i32, align 4\l  %7 = alloca i8, align 1\l  %8 = alloca i32*, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  call void @__sanitizer_cov_trace_pc_guard(i32* getelementptr inbounds ([3 x\l... i32], [3 x i32]* @__sancov_gen_.38, i32 0, i32 0)) #14, !dbg !771\l  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8\l  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata\l... !772, metadata !DIExpression()), !dbg !773\l  store i8 %1, i8* %5, align 1\l  call void @llvm.dbg.declare(metadata i8* %5, metadata !774, metadata\l... !DIExpression()), !dbg !775\l  store i32 %2, i32* %6, align 4\l  call void @llvm.dbg.declare(metadata i32* %6, metadata !776, metadata\l... !DIExpression()), !dbg !777\l  call void @llvm.dbg.declare(metadata i8* %7, metadata !778, metadata\l... !DIExpression()), !dbg !779\l  %11 = load i8, i8* %5, align 1, !dbg !780\l  store i8 %11, i8* %7, align 1, !dbg !779\l  call void @llvm.dbg.declare(metadata i32** %8, metadata !781, metadata\l... !DIExpression()), !dbg !783\l  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8,\l... !dbg !784\l  %13 = icmp ne %struct.quoting_options* %12, null, !dbg !784\l  br i1 %13, label %14, label %16, !dbg !784\l|{<s0>T|<s1>F}}"];
	Node0x555555847ab0:s0 -> Node0x555555847b80;
	Node0x555555847ab0:s1 -> Node0x555555847bd0;
	Node0x555555847b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%14:\l14:                                               \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([3 x i32]* @__sancov_gen_.38 to i64), i64 4) to i32*)) #14, !dbg\l... !785\l  %15 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8,\l... !dbg !785\l  br label %17, !dbg !784\l}"];
	Node0x555555847b80 -> Node0x555555847c20;
	Node0x555555847bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%16:\l16:                                               \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([3 x i32]* @__sancov_gen_.38 to i64), i64 8) to i32*)) #14, !dbg\l... !784\l  br label %17, !dbg !784\l}"];
	Node0x555555847bd0 -> Node0x555555847c20;
	Node0x555555847c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi %struct.quoting_options* [ %15, %14 ], [ @default_quoting_options,\l... %16 ], !dbg !784\l  %19 = getelementptr inbounds %struct.quoting_options,\l... %struct.quoting_options* %18, i32 0, i32 2, !dbg !786\l  %20 = getelementptr inbounds [8 x i32], [8 x i32]* %19, i32 0, i32 0, !dbg\l... !787\l  %21 = load i8, i8* %7, align 1, !dbg !788\l  %22 = zext i8 %21 to i64, !dbg !788\l  %23 = udiv i64 %22, 32, !dbg !789\l  %24 = getelementptr inbounds i32, i32* %20, i64 %23, !dbg !790\l  store i32* %24, i32** %8, align 8, !dbg !783\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !791, metadata\l... !DIExpression()), !dbg !792\l  %25 = load i8, i8* %7, align 1, !dbg !793\l  %26 = zext i8 %25 to i64, !dbg !793\l  %27 = urem i64 %26, 32, !dbg !794\l  %28 = trunc i64 %27 to i32, !dbg !793\l  store i32 %28, i32* %9, align 4, !dbg !792\l  call void @llvm.dbg.declare(metadata i32* %10, metadata !795, metadata\l... !DIExpression()), !dbg !796\l  %29 = load i32*, i32** %8, align 8, !dbg !797\l  %30 = load i32, i32* %29, align 4, !dbg !798\l  %31 = load i32, i32* %9, align 4, !dbg !799\l  %32 = lshr i32 %30, %31, !dbg !800\l  %33 = and i32 %32, 1, !dbg !801\l  store i32 %33, i32* %10, align 4, !dbg !796\l  %34 = load i32, i32* %6, align 4, !dbg !802\l  %35 = and i32 %34, 1, !dbg !803\l  %36 = load i32, i32* %10, align 4, !dbg !804\l  %37 = xor i32 %35, %36, !dbg !805\l  %38 = load i32, i32* %9, align 4, !dbg !806\l  %39 = shl i32 %37, %38, !dbg !807\l  %40 = load i32*, i32** %8, align 8, !dbg !808\l  %41 = load i32, i32* %40, align 4, !dbg !809\l  %42 = xor i32 %41, %39, !dbg !809\l  store i32 %42, i32* %40, align 4, !dbg !809\l  %43 = load i32, i32* %10, align 4, !dbg !810\l  ret i32 %43, !dbg !811\l}"];
}
