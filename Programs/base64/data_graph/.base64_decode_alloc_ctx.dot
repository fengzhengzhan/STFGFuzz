digraph "CFG for 'base64_decode_alloc_ctx' function" {
	label="CFG for 'base64_decode_alloc_ctx' function";

	Node0x555ee4f915a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = alloca i1, align 1\l  %7 = alloca %struct.base64_decode_context*, align 8\l  %8 = alloca i8*, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i8**, align 8\l  %11 = alloca i64*, align 8\l  %12 = alloca i64, align 8\l  call void @__sanitizer_cov_trace_pc_guard(i32* getelementptr inbounds ([5 x\l... i32], [5 x i32]* @__sancov_gen_.20, i32 0, i32 0)) #14, !dbg !735\l  store %struct.base64_decode_context* %0, %struct.base64_decode_context** %7,\l... align 8\l  call void @llvm.dbg.declare(metadata %struct.base64_decode_context** %7,\l... metadata !736, metadata !DIExpression()), !dbg !737\l  store i8* %1, i8** %8, align 8\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !738, metadata\l... !DIExpression()), !dbg !739\l  store i64 %2, i64* %9, align 8\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !740, metadata\l... !DIExpression()), !dbg !741\l  store i8** %3, i8*** %10, align 8\l  call void @llvm.dbg.declare(metadata i8*** %10, metadata !742, metadata\l... !DIExpression()), !dbg !743\l  store i64* %4, i64** %11, align 8\l  call void @llvm.dbg.declare(metadata i64** %11, metadata !744, metadata\l... !DIExpression()), !dbg !745\l  call void @llvm.dbg.declare(metadata i64* %12, metadata !746, metadata\l... !DIExpression()), !dbg !747\l  %13 = load i64, i64* %9, align 8, !dbg !748\l  %14 = udiv i64 %13, 4, !dbg !749\l  %15 = mul i64 3, %14, !dbg !750\l  %16 = add i64 %15, 3, !dbg !751\l  store i64 %16, i64* %12, align 8, !dbg !747\l  %17 = load i64, i64* %12, align 8, !dbg !752\l  %18 = call noalias i8* @malloc(i64 %17) #15, !dbg !753\l  %19 = load i8**, i8*** %10, align 8, !dbg !754\l  store i8* %18, i8** %19, align 8, !dbg !755\l  %20 = load i8**, i8*** %10, align 8, !dbg !756\l  %21 = load i8*, i8** %20, align 8, !dbg !758\l  %22 = icmp ne i8* %21, null, !dbg !758\l  br i1 %22, label %24, label %23, !dbg !759\l|{<s0>T|<s1>F}}"];
	Node0x555ee4f915a0:s0 -> Node0x555ee4f91640;
	Node0x555ee4f915a0:s1 -> Node0x555ee4f915f0;
	Node0x555ee4f915f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%23:\l23:                                               \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([5 x i32]* @__sancov_gen_.20 to i64), i64 4) to i32*)) #14, !dbg\l... !760\l  store i1 true, i1* %6, align 1, !dbg !760\l  br label %42, !dbg !760\l}"];
	Node0x555ee4f915f0 -> Node0x555ee4f91820;
	Node0x555ee4f91640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#dc5d4a70",label="{%24:\l24:                                               \l  %25 = load %struct.base64_decode_context*, %struct.base64_decode_context**\l... %7, align 8, !dbg !761\l  %26 = load i8*, i8** %8, align 8, !dbg !763\l  %27 = load i64, i64* %9, align 8, !dbg !764\l  %28 = load i8**, i8*** %10, align 8, !dbg !765\l  %29 = load i8*, i8** %28, align 8, !dbg !766\l  %30 = call zeroext i1 @base64_decode_ctx(%struct.base64_decode_context* %25,\l... i8* %26, i64 %27, i8* %29, i64* %12), !dbg !767\l  br i1 %30, label %35, label %31, !dbg !768\l|{<s0>T|<s1>F}}"];
	Node0x555ee4f91640:s0 -> Node0x555ee4f916e0;
	Node0x555ee4f91640:s1 -> Node0x555ee4f91690;
	Node0x555ee4f91690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%31:\l31:                                               \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([5 x i32]* @__sancov_gen_.20 to i64), i64 8) to i32*)) #14, !dbg\l... !769\l  %32 = load i8**, i8*** %10, align 8, !dbg !769\l  %33 = load i8*, i8** %32, align 8, !dbg !771\l  call void @free(i8* %33) #15, !dbg !772\l  %34 = load i8**, i8*** %10, align 8, !dbg !773\l  store i8* null, i8** %34, align 8, !dbg !774\l  store i1 false, i1* %6, align 1, !dbg !775\l  br label %42, !dbg !775\l}"];
	Node0x555ee4f91690 -> Node0x555ee4f91820;
	Node0x555ee4f916e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%35:\l35:                                               \l  %36 = load i64*, i64** %11, align 8, !dbg !776\l  %37 = icmp ne i64* %36, null, !dbg !776\l  br i1 %37, label %38, label %._crit_edge, !dbg !778\l|{<s0>T|<s1>F}}"];
	Node0x555ee4f916e0:s0 -> Node0x555ee4f91780;
	Node0x555ee4f916e0:s1 -> Node0x555ee4f91730;
	Node0x555ee4f91730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{._crit_edge:                                      \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([5 x i32]* @__sancov_gen_.20 to i64), i64 12) to i32*)) #14, !dbg\l... !778\l  br label %41, !dbg !778\l}"];
	Node0x555ee4f91730 -> Node0x555ee4f917d0;
	Node0x555ee4f91780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%38:\l38:                                               \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([5 x i32]* @__sancov_gen_.20 to i64), i64 16) to i32*)) #14, !dbg\l... !779\l  %39 = load i64, i64* %12, align 8, !dbg !779\l  %40 = load i64*, i64** %11, align 8, !dbg !780\l  store i64 %39, i64* %40, align 8, !dbg !781\l  br label %41, !dbg !782\l}"];
	Node0x555ee4f91780 -> Node0x555ee4f917d0;
	Node0x555ee4f917d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%41:\l41:                                               \l  store i1 true, i1* %6, align 1, !dbg !783\l  br label %42, !dbg !783\l}"];
	Node0x555ee4f917d0 -> Node0x555ee4f91820;
	Node0x555ee4f91820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = load i1, i1* %6, align 1, !dbg !784\l  ret i1 %43, !dbg !784\l}"];
}
