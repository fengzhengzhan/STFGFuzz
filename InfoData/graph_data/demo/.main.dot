digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x558df726e630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %opt = alloca i32, align 4\l  %filename = alloca i8*, align 8\l  %fp = alloca %struct._IO_FILE*, align 8\l  %cleanup.dest.slot = alloca i32, align 4\l  %i = alloca i32, align 4\l  %i22 = alloca i32, align 4\l  %i37 = alloca i32, align 4\l  %x = alloca i64, align 8\l  %y = alloca i32, align 4\l  %z = alloca i16, align 2\l  %asan_local_stack_base = alloca i64, align 8\l  %0 = load i32, i32* @__asan_option_detect_stack_use_after_return, align 4\l  %1 = icmp ne i32 %0, 0\l  br i1 %1, label %2, label %4\l|{<s0>T|<s1>F}}"];
	Node0x558df726e630:s0 -> Node0x558df726f1f0;
	Node0x558df726e630:s1 -> Node0x558df726f240;
	Node0x558df726f1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%2:\l2:                                                \l  %3 = call i64 @__asan_stack_malloc_5(i64 1216)\l  br label %4\l}"];
	Node0x558df726f1f0 -> Node0x558df726f240;
	Node0x558df726f240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%4:\l4:                                                \l  %5 = phi i64 [ 0, %entry ], [ %3, %2 ]\l  %6 = icmp eq i64 %5, 0\l  br i1 %6, label %7, label %9\l|{<s0>T|<s1>F}}"];
	Node0x558df726f240:s0 -> Node0x558df726f720;
	Node0x558df726f240:s1 -> Node0x558df726f770;
	Node0x558df726f720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%7:\l7:                                                \l  %MyAlloca = alloca i8, i64 1216, align 32\l  %8 = ptrtoint i8* %MyAlloca to i64\l  br label %9\l}"];
	Node0x558df726f720 -> Node0x558df726f770;
	Node0x558df726f770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%9:\l9:                                                \l  %10 = phi i64 [ %5, %4 ], [ %8, %7 ]\l  store i64 %10, i64* %asan_local_stack_base, align 8\l  %11 = add i64 %10, 32\l  %12 = inttoptr i64 %11 to i32*\l  %13 = add i64 %10, 48\l  %14 = inttoptr i64 %13 to [201 x i8]*\l  %15 = add i64 %10, 320\l  %16 = inttoptr i64 %15 to [45 x i8]*\l  %17 = add i64 %10, 400\l  %18 = inttoptr i64 %17 to [201 x i8]*\l  %19 = add i64 %10, 672\l  %20 = inttoptr i64 %19 to [201 x i8]*\l  %21 = add i64 %10, 944\l  %22 = inttoptr i64 %21 to [201 x i8]*\l  %23 = inttoptr i64 %10 to i64*\l  store i64 1102416563, i64* %23, align 8\l  %24 = add i64 %10, 8\l  %25 = inttoptr i64 %24 to i64*\l  store i64 ptrtoint ([87 x i8]* @___asan_gen_ to i64), i64* %25, align 8\l  %26 = add i64 %10, 16\l  %27 = inttoptr i64 %26 to i64*\l  store i64 ptrtoint (i32 (i32, i8**)* @main to i64), i64* %27, align 8\l  %28 = lshr i64 %10, 3\l  %29 = add i64 %28, 2147450880\l  %30 = add i64 %29, 0\l  %31 = inttoptr i64 %30 to i64*\l  store i64 -506387807054204431, i64* %31, align 1\l  %32 = add i64 %29, 8\l  %33 = inttoptr i64 %32 to i64*\l  store i64 -506381209866536712, i64* %33, align 1\l  %34 = add i64 %29, 16\l  %35 = inttoptr i64 %34 to i64*\l  store i64 -506381209866536712, i64* %35, align 1\l  %36 = add i64 %29, 24\l  %37 = inttoptr i64 %36 to i64*\l  store i64 -506381209866536712, i64* %37, align 1\l  %38 = add i64 %29, 32\l  %39 = inttoptr i64 %38 to i64*\l  store i64 -940422246894996750, i64* %39, align 1\l  %40 = add i64 %29, 40\l  %41 = inttoptr i64 %40 to i64*\l  store i64 -940415623954368264, i64* %41, align 1\l  %42 = add i64 %29, 48\l  %43 = inttoptr i64 %42 to i64*\l  store i64 -506381209866538254, i64* %43, align 1\l  %44 = add i64 %29, 56\l  %45 = inttoptr i64 %44 to i64*\l  store i64 -506381209866536712, i64* %45, align 1\l  %46 = add i64 %29, 64\l  %47 = inttoptr i64 %46 to i64*\l  store i64 -506381209866536712, i64* %47, align 1\l  %48 = add i64 %29, 72\l  %49 = inttoptr i64 %48 to i64*\l  store i64 -940422246793938696, i64* %49, align 1\l  %50 = add i64 %29, 80\l  %51 = inttoptr i64 %50 to i64*\l  store i64 -506381209967594766, i64* %51, align 1\l  %52 = add i64 %29, 88\l  %53 = inttoptr i64 %52 to i64*\l  store i64 -506381209866536712, i64* %53, align 1\l  %54 = add i64 %29, 96\l  %55 = inttoptr i64 %54 to i64*\l  store i64 -506381209866536712, i64* %55, align 1\l  %56 = add i64 %29, 104\l  %57 = inttoptr i64 %56 to i64*\l  store i64 -940415623954368264, i64* %57, align 1\l  %58 = add i64 %29, 112\l  %59 = inttoptr i64 %58 to i64*\l  store i64 -506387832807165198, i64* %59, align 1\l  %60 = add i64 %29, 120\l  %61 = inttoptr i64 %60 to i64*\l  store i64 -506381209866536712, i64* %61, align 1\l  %62 = add i64 %29, 128\l  %63 = inttoptr i64 %62 to i64*\l  store i64 -506381209866536712, i64* %63, align 1\l  %64 = add i64 %29, 136\l  %65 = inttoptr i64 %64 to i64*\l  store i64 -506381209866536712, i64* %65, align 1\l  %66 = add i64 %29, 144\l  %67 = inttoptr i64 %66 to i64*\l  store i64 -868082074056920077, i64* %67, align 1\l  call void @__sanitizer_cov_trace_pc_guard(i32* getelementptr inbounds ([15 x\l... i32], [15 x i32]* @__sancov_gen_.10, i32 0, i32 0)) #8\l  store i32 0, i32* %retval, align 4\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  %68 = bitcast i32* %opt to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %68) #3\l  %69 = bitcast i32* %12 to i8*\l  %70 = add i64 %29, 4\l  %71 = inttoptr i64 %70 to i8*\l  store i8 4, i8* %71, align 1\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %69) #3\l  %72 = bitcast i8** %filename to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #3\l  br label %while.cond\l}"];
	Node0x558df726f770 -> Node0x558df7274620;
	Node0x558df7274620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %73 = load i32, i32* %argc.addr, align 4\l  %74 = load i8**, i8*** %argv.addr, align 8\l  %call = call i32 @getopt_long(i32 %73, i8** %74, i8* getelementptr inbounds\l... (\{ [3 x i8], [61 x i8] \}, \{ [3 x i8], [61 x i8] \}* @.str.1, i32 0, i32 0, i64\l... 0), %struct.option* getelementptr inbounds (\{ [1 x %struct.option], [32 x i8]\l... \}, \{ [1 x %struct.option], [32 x i8] \}* @_ZZ4mainE12long_options, i32 0, i32\l... 0, i64 0), i32* %12) #3\l  store i32 %call, i32* %opt, align 4\l  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call)\l  %cmp = icmp ne i32 %call, -1\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x558df7274620:s0 -> Node0x558df7275820;
	Node0x558df7274620:s1 -> Node0x558df72758d0;
	Node0x558df7275820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.body:                                       \l  %75 = load i32, i32* %opt, align 4\l  %76 = zext i32 %75 to i64\l  call void @__sanitizer_cov_trace_switch(i64 %76, i64* getelementptr inbounds\l... ([3 x i64], [3 x i64]* @__sancov_gen_cov_switch_values, i32 0, i32 0))\l  switch i32 %75, label %sw.default [\l    i32 102, label %sw.bb\l  ]\l|{<s0>def|<s1>102}}"];
	Node0x558df7275820:s0 -> Node0x558df7275e60;
	Node0x558df7275820:s1 -> Node0x558df7275f10;
	Node0x558df7275f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{sw.bb:                                            \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 4) to i32*)) #8\l  %77 = load i8, i8* inttoptr (i64 add (i64 lshr (i64 ptrtoint (i8** @optarg\l... to i64), i64 3), i64 2147450880) to i8*), align 1\l  %78 = icmp ne i8 %77, 0\l  br i1 %78, label %79, label %80\l|{<s0>T|<s1>F}}"];
	Node0x558df7275f10:s0 -> Node0x558df7276820;
	Node0x558df7275f10:s1 -> Node0x558df72768b0;
	Node0x558df7276820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%79:\l79:                                               \l  call void @__asan_report_load8(i64 ptrtoint (i8** @optarg to i64)) #8\l  unreachable\l}"];
	Node0x558df72768b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{%80:\l80:                                               \l  %81 = load i8*, i8** @optarg, align 8\l  store i8* %81, i8** %filename, align 8\l  br label %sw.epilog\l}"];
	Node0x558df72768b0 -> Node0x558df7276d90;
	Node0x558df7275e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{sw.default:                                       \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 8) to i32*)) #8\l  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds (\{ [18 x\l... i8], [46 x i8] \}, \{ [18 x i8], [46 x i8] \}* @.str.2, i32 0, i32 0, i64 0))\l  br label %sw.epilog\l}"];
	Node0x558df7275e60 -> Node0x558df7276d90;
	Node0x558df7276d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{sw.epilog:                                        \l  br label %while.cond, !llvm.loop !29\l}"];
	Node0x558df7276d90 -> Node0x558df7274620;
	Node0x558df72758d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{while.end:                                        \l  %82 = bitcast [201 x i8]* %14 to i8*\l  %83 = add i64 %29, 6\l  %84 = inttoptr i64 %83 to i64*\l  store i64 0, i64* %84, align 1\l  %85 = add i64 %29, 14\l  %86 = inttoptr i64 %85 to i64*\l  store i64 0, i64* %86, align 1\l  %87 = add i64 %29, 22\l  %88 = inttoptr i64 %87 to i64*\l  store i64 0, i64* %88, align 1\l  %89 = add i64 %29, 30\l  %90 = inttoptr i64 %89 to i16*\l  store i16 256, i16* %90, align 1\l  call void @llvm.lifetime.start.p0i8(i64 201, i8* %82) #3\l  %91 = bitcast %struct._IO_FILE** %fp to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %91) #3\l  %92 = load i8*, i8** %filename, align 8\l  %call2 = call %struct._IO_FILE* @fopen(i8* %92, i8* getelementptr inbounds\l... (\{ [2 x i8], [62 x i8] \}, \{ [2 x i8], [62 x i8] \}* @.str.3, i32 0, i32 0, i64\l... 0))\l  store %struct._IO_FILE* %call2, %struct._IO_FILE** %fp, align 8\l  %arraydecay = getelementptr inbounds [201 x i8], [201 x i8]* %14, i64 0, i64\l... 0\l  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8\l  %call3 = call i8* @fgets(i8* %arraydecay, i32 201, %struct._IO_FILE* %93)\l  %94 = bitcast [45 x i8]* %16 to i8*\l  %95 = add i64 %29, 40\l  %96 = inttoptr i64 %95 to i32*\l  store i32 0, i32* %96, align 1\l  %97 = add i64 %29, 44\l  %98 = inttoptr i64 %97 to i16*\l  store i16 1280, i16* %98, align 1\l  call void @llvm.lifetime.start.p0i8(i64 45, i8* %94) #3\l  %99 = bitcast [45 x i8]* %16 to i8*\l  %100 = call i8* @__asan_memset(i8* %99, i32 0, i64 45)\l  %arraydecay4 = getelementptr inbounds [45 x i8], [45 x i8]* %16, i64 0, i64 0\l  %arraydecay5 = getelementptr inbounds [201 x i8], [201 x i8]* %14, i64 0,\l... i64 0\l  %101 = call i8* @__asan_memcpy(i8* %arraydecay4, i8* %arraydecay5, i64 44)\l  %arrayidx = getelementptr inbounds [45 x i8], [45 x i8]* %16, i64 0, i64 44\l  %102 = ptrtoint i8* %arrayidx to i64\l  %103 = lshr i64 %102, 3\l  %104 = add i64 %103, 2147450880\l  %105 = inttoptr i64 %104 to i8*\l  %106 = load i8, i8* %105, align 1\l  %107 = icmp ne i8 %106, 0\l  br i1 %107, label %108, label %113, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df72758d0:s0 -> Node0x558df7279480;
	Node0x558df72758d0:s1 -> Node0x558df7279510;
	Node0x558df7279480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%108:\l108:                                              \l  %109 = and i64 %102, 7\l  %110 = trunc i64 %109 to i8\l  %111 = icmp sge i8 %110, %106\l  br i1 %111, label %112, label %113\l|{<s0>T|<s1>F}}"];
	Node0x558df7279480:s0 -> Node0x558df7279910;
	Node0x558df7279480:s1 -> Node0x558df7279510;
	Node0x558df7279910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%112:\l112:                                              \l  call void @__asan_report_store1(i64 %102) #8\l  unreachable\l}"];
	Node0x558df7279510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%113:\l113:                                              \l  store i8 0, i8* %arrayidx, align 4\l  %arrayidx6 = getelementptr inbounds [45 x i8], [45 x i8]* %16, i64 0, i64 0\l  %call7 = call i32 @memcmp(i8* %arrayidx6, i8* getelementptr inbounds (\{ [21\l... x i8], [43 x i8] \}, \{ [21 x i8], [43 x i8] \}* @.str.4, i32 0, i32 0, i64 0),\l... i64 20) #9\l  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)\l  %cmp8 = icmp ne i32 %call7, 0\l  br i1 %cmp8, label %while.end.if.then_crit_edge, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x558df7279510:s0 -> Node0x558df727a330;
	Node0x558df7279510:s1 -> Node0x558df727a3e0;
	Node0x558df727a330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{while.end.if.then_crit_edge:                      \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 12) to i32*)) #8\l  br label %if.then\l}"];
	Node0x558df727a330 -> Node0x558df727a6e0;
	Node0x558df727a3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{lor.lhs.false:                                    \l  %arrayidx9 = getelementptr inbounds [45 x i8], [45 x i8]* %16, i64 0, i64 20\l  %call10 = call i32 @strncmp(i8* %arrayidx9, i8* getelementptr inbounds (\{\l... [12 x i8], [52 x i8] \}, \{ [12 x i8], [52 x i8] \}* @.str.5, i32 0, i32 0, i64\l... 0), i64 11) #10\l  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)\l  %cmp11 = icmp ne i32 %call10, 0\l  br i1 %cmp11, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false12\l|{<s0>T|<s1>F}}"];
	Node0x558df727a3e0:s0 -> Node0x558df727acc0;
	Node0x558df727a3e0:s1 -> Node0x558df727adb0;
	Node0x558df727acc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{lor.lhs.false.if.then_crit_edge:                  \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 16) to i32*)) #8\l  br label %if.then\l}"];
	Node0x558df727acc0 -> Node0x558df727a6e0;
	Node0x558df727adb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{lor.lhs.false12:                                  \l  %arrayidx13 = getelementptr inbounds [45 x i8], [45 x i8]* %16, i64 0, i64 31\l  %call14 = call i32 @strcmp(i8* %arrayidx13, i8* getelementptr inbounds (\{\l... [14 x i8], [50 x i8] \}, \{ [14 x i8], [50 x i8] \}* @.str.6, i32 0, i32 0, i64\l... 0)) #9\l  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)\l  %cmp15 = icmp ne i32 %call14, 0\l  br i1 %cmp15, label %lor.lhs.false12.if.then_crit_edge, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x558df727adb0:s0 -> Node0x558df727b6c0;
	Node0x558df727adb0:s1 -> Node0x558df727b7b0;
	Node0x558df727b6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{lor.lhs.false12.if.then_crit_edge:                \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 20) to i32*)) #8\l  br label %if.then\l}"];
	Node0x558df727b6c0 -> Node0x558df727a6e0;
	Node0x558df727a6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then:                                          \l  store i32 1, i32* %retval, align 4\l  store i32 1, i32* %cleanup.dest.slot, align 4\l  br label %cleanup80\l}"];
	Node0x558df727a6e0 -> Node0x558df727c290;
	Node0x558df727b7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.end:                                           \l  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds (\{ [27 x\l... i8], [37 x i8] \}, \{ [27 x i8], [37 x i8] \}* @.str.7, i32 0, i32 0, i64 0))\l  %114 = bitcast [201 x i8]* %18 to i8*\l  %115 = add i64 %29, 50\l  %116 = inttoptr i64 %115 to i64*\l  store i64 0, i64* %116, align 1\l  %117 = add i64 %29, 58\l  %118 = inttoptr i64 %117 to i64*\l  store i64 0, i64* %118, align 1\l  %119 = add i64 %29, 66\l  %120 = inttoptr i64 %119 to i64*\l  store i64 0, i64* %120, align 1\l  %121 = add i64 %29, 74\l  %122 = inttoptr i64 %121 to i16*\l  store i16 256, i16* %122, align 1\l  call void @llvm.lifetime.start.p0i8(i64 201, i8* %114) #3\l  %123 = bitcast [201 x i8]* %20 to i8*\l  %124 = add i64 %29, 84\l  %125 = inttoptr i64 %124 to i64*\l  store i64 0, i64* %125, align 1\l  %126 = add i64 %29, 92\l  %127 = inttoptr i64 %126 to i64*\l  store i64 0, i64* %127, align 1\l  %128 = add i64 %29, 100\l  %129 = inttoptr i64 %128 to i64*\l  store i64 0, i64* %129, align 1\l  %130 = add i64 %29, 108\l  %131 = inttoptr i64 %130 to i16*\l  store i16 256, i16* %131, align 1\l  call void @llvm.lifetime.start.p0i8(i64 201, i8* %123) #3\l  %132 = bitcast [201 x i8]* %22 to i8*\l  %133 = add i64 %29, 118\l  %134 = inttoptr i64 %133 to i64*\l  store i64 0, i64* %134, align 1\l  %135 = add i64 %29, 126\l  %136 = inttoptr i64 %135 to i64*\l  store i64 0, i64* %136, align 1\l  %137 = add i64 %29, 134\l  %138 = inttoptr i64 %137 to i64*\l  store i64 0, i64* %138, align 1\l  %139 = add i64 %29, 142\l  %140 = inttoptr i64 %139 to i16*\l  store i16 256, i16* %140, align 1\l  call void @llvm.lifetime.start.p0i8(i64 201, i8* %132) #3\l  %141 = bitcast i32* %i to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %141) #3\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x558df727b7b0 -> Node0x558df727f520;
	Node0x558df727f520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.cond:                                         \l  %142 = load i32, i32* %i, align 4\l  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %142)\l  %cmp17 = icmp slt i32 %142, 16\l  br i1 %cmp17, label %for.body, label %for.cond.cleanup\l|{<s0>T|<s1>F}}"];
	Node0x558df727f520:s0 -> Node0x558df727f850;
	Node0x558df727f520:s1 -> Node0x558df727f8a0;
	Node0x558df727f8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{for.cond.cleanup:                                 \l  store i32 5, i32* %cleanup.dest.slot, align 4\l  %143 = bitcast i32* %i to i8*\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %143) #3\l  br label %for.end\l}"];
	Node0x558df727f8a0 -> Node0x558df727fdd0;
	Node0x558df727f850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.body:                                         \l  %144 = load i32, i32* %i, align 4\l  %add = add nsw i32 %144, 44\l  %idxprom = sext i32 %add to i64\l  %arrayidx18 = getelementptr inbounds [201 x i8], [201 x i8]* %14, i64 0, i64\l... %idxprom\l  %145 = ptrtoint i8* %arrayidx18 to i64\l  %146 = lshr i64 %145, 3\l  %147 = add i64 %146, 2147450880\l  %148 = inttoptr i64 %147 to i8*\l  %149 = load i8, i8* %148, align 1\l  %150 = icmp ne i8 %149, 0\l  br i1 %150, label %151, label %156, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df727f850:s0 -> Node0x558df7280460;
	Node0x558df727f850:s1 -> Node0x558df72804f0;
	Node0x558df7280460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%151:\l151:                                              \l  %152 = and i64 %145, 7\l  %153 = trunc i64 %152 to i8\l  %154 = icmp sge i8 %153, %149\l  br i1 %154, label %155, label %156\l|{<s0>T|<s1>F}}"];
	Node0x558df7280460:s0 -> Node0x558df7280dd0;
	Node0x558df7280460:s1 -> Node0x558df72804f0;
	Node0x558df7280dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%155:\l155:                                              \l  call void @__asan_report_load1(i64 %145) #8\l  unreachable\l}"];
	Node0x558df72804f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%156:\l156:                                              \l  %157 = load i8, i8* %arrayidx18, align 1\l  %158 = load i32, i32* %i, align 4\l  %idxprom19 = sext i32 %158 to i64\l  %arrayidx20 = getelementptr inbounds [201 x i8], [201 x i8]* %18, i64 0, i64\l... %idxprom19\l  %159 = ptrtoint i8* %arrayidx20 to i64\l  %160 = lshr i64 %159, 3\l  %161 = add i64 %160, 2147450880\l  %162 = inttoptr i64 %161 to i8*\l  %163 = load i8, i8* %162, align 1\l  %164 = icmp ne i8 %163, 0\l  br i1 %164, label %165, label %170, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df72804f0:s0 -> Node0x558df72816d0;
	Node0x558df72804f0:s1 -> Node0x558df7281720;
	Node0x558df72816d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%165:\l165:                                              \l  %166 = and i64 %159, 7\l  %167 = trunc i64 %166 to i8\l  %168 = icmp sge i8 %167, %163\l  br i1 %168, label %169, label %170\l|{<s0>T|<s1>F}}"];
	Node0x558df72816d0:s0 -> Node0x558df72819b0;
	Node0x558df72816d0:s1 -> Node0x558df7281720;
	Node0x558df72819b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%169:\l169:                                              \l  call void @__asan_report_store1(i64 %159) #8\l  unreachable\l}"];
	Node0x558df7281720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%170:\l170:                                              \l  store i8 %157, i8* %arrayidx20, align 1\l  br label %for.inc\l}"];
	Node0x558df7281720 -> Node0x558df7281d00;
	Node0x558df7281d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.inc:                                          \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 24) to i32*)) #8\l  %171 = load i32, i32* %i, align 4\l  %inc = add nsw i32 %171, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond, !llvm.loop !32\l}"];
	Node0x558df7281d00 -> Node0x558df727f520;
	Node0x558df727fdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{for.end:                                          \l  %arrayidx21 = getelementptr inbounds [201 x i8], [201 x i8]* %18, i64 0, i64\l... 16\l  %172 = ptrtoint i8* %arrayidx21 to i64\l  %173 = lshr i64 %172, 3\l  %174 = add i64 %173, 2147450880\l  %175 = inttoptr i64 %174 to i8*\l  %176 = load i8, i8* %175, align 1\l  %177 = icmp ne i8 %176, 0\l  br i1 %177, label %178, label %183, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df727fdd0:s0 -> Node0x558df7282620;
	Node0x558df727fdd0:s1 -> Node0x558df72826b0;
	Node0x558df7282620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%178:\l178:                                              \l  %179 = and i64 %172, 7\l  %180 = trunc i64 %179 to i8\l  %181 = icmp sge i8 %180, %176\l  br i1 %181, label %182, label %183\l|{<s0>T|<s1>F}}"];
	Node0x558df7282620:s0 -> Node0x558df7282980;
	Node0x558df7282620:s1 -> Node0x558df72826b0;
	Node0x558df7282980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%182:\l182:                                              \l  call void @__asan_report_store1(i64 %172) #8\l  unreachable\l}"];
	Node0x558df72826b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%183:\l183:                                              \l  store i8 0, i8* %arrayidx21, align 16\l  %184 = bitcast i32* %i22 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %184) #3\l  store i32 0, i32* %i22, align 4\l  br label %for.cond23\l}"];
	Node0x558df72826b0 -> Node0x558df7282ee0;
	Node0x558df7282ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.cond23:                                       \l  %185 = load i32, i32* %i22, align 4\l  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %185)\l  %cmp24 = icmp slt i32 %185, 8\l  br i1 %cmp24, label %for.body26, label %for.cond.cleanup25\l|{<s0>T|<s1>F}}"];
	Node0x558df7282ee0:s0 -> Node0x558df7283210;
	Node0x558df7282ee0:s1 -> Node0x558df7283260;
	Node0x558df7283260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{for.cond.cleanup25:                               \l  store i32 8, i32* %cleanup.dest.slot, align 4\l  %186 = bitcast i32* %i22 to i8*\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %186) #3\l  br label %for.end35\l}"];
	Node0x558df7283260 -> Node0x558df72836a0;
	Node0x558df7283210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.body26:                                       \l  %187 = load i32, i32* %i22, align 4\l  %add27 = add nsw i32 %187, 44\l  %add28 = add nsw i32 %add27, 16\l  %idxprom29 = sext i32 %add28 to i64\l  %arrayidx30 = getelementptr inbounds [201 x i8], [201 x i8]* %14, i64 0, i64\l... %idxprom29\l  %188 = ptrtoint i8* %arrayidx30 to i64\l  %189 = lshr i64 %188, 3\l  %190 = add i64 %189, 2147450880\l  %191 = inttoptr i64 %190 to i8*\l  %192 = load i8, i8* %191, align 1\l  %193 = icmp ne i8 %192, 0\l  br i1 %193, label %194, label %199, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df7283210:s0 -> Node0x558df7283d20;
	Node0x558df7283210:s1 -> Node0x558df7283d70;
	Node0x558df7283d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%194:\l194:                                              \l  %195 = and i64 %188, 7\l  %196 = trunc i64 %195 to i8\l  %197 = icmp sge i8 %196, %192\l  br i1 %197, label %198, label %199\l|{<s0>T|<s1>F}}"];
	Node0x558df7283d20:s0 -> Node0x558df7284000;
	Node0x558df7283d20:s1 -> Node0x558df7283d70;
	Node0x558df7284000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%198:\l198:                                              \l  call void @__asan_report_load1(i64 %188) #8\l  unreachable\l}"];
	Node0x558df7283d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%199:\l199:                                              \l  %200 = load i8, i8* %arrayidx30, align 1\l  %201 = load i32, i32* %i22, align 4\l  %idxprom31 = sext i32 %201 to i64\l  %arrayidx32 = getelementptr inbounds [201 x i8], [201 x i8]* %20, i64 0, i64\l... %idxprom31\l  %202 = ptrtoint i8* %arrayidx32 to i64\l  %203 = lshr i64 %202, 3\l  %204 = add i64 %203, 2147450880\l  %205 = inttoptr i64 %204 to i8*\l  %206 = load i8, i8* %205, align 1\l  %207 = icmp ne i8 %206, 0\l  br i1 %207, label %208, label %213, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df7283d70:s0 -> Node0x558df72847f0;
	Node0x558df7283d70:s1 -> Node0x558df7284840;
	Node0x558df72847f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%208:\l208:                                              \l  %209 = and i64 %202, 7\l  %210 = trunc i64 %209 to i8\l  %211 = icmp sge i8 %210, %206\l  br i1 %211, label %212, label %213\l|{<s0>T|<s1>F}}"];
	Node0x558df72847f0:s0 -> Node0x558df7284ad0;
	Node0x558df72847f0:s1 -> Node0x558df7284840;
	Node0x558df7284ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%212:\l212:                                              \l  call void @__asan_report_store1(i64 %202) #8\l  unreachable\l}"];
	Node0x558df7284840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%213:\l213:                                              \l  store i8 %200, i8* %arrayidx32, align 1\l  br label %for.inc33\l}"];
	Node0x558df7284840 -> Node0x558df7284e20;
	Node0x558df7284e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.inc33:                                        \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 28) to i32*)) #8\l  %214 = load i32, i32* %i22, align 4\l  %inc34 = add nsw i32 %214, 1\l  store i32 %inc34, i32* %i22, align 4\l  br label %for.cond23, !llvm.loop !33\l}"];
	Node0x558df7284e20 -> Node0x558df7282ee0;
	Node0x558df72836a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{for.end35:                                        \l  %arrayidx36 = getelementptr inbounds [201 x i8], [201 x i8]* %20, i64 0, i64\l... 8\l  %215 = ptrtoint i8* %arrayidx36 to i64\l  %216 = lshr i64 %215, 3\l  %217 = add i64 %216, 2147450880\l  %218 = inttoptr i64 %217 to i8*\l  %219 = load i8, i8* %218, align 1\l  %220 = icmp ne i8 %219, 0\l  br i1 %220, label %221, label %226, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df72836a0:s0 -> Node0x558df72856f0;
	Node0x558df72836a0:s1 -> Node0x558df7285780;
	Node0x558df72856f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%221:\l221:                                              \l  %222 = and i64 %215, 7\l  %223 = trunc i64 %222 to i8\l  %224 = icmp sge i8 %223, %219\l  br i1 %224, label %225, label %226\l|{<s0>T|<s1>F}}"];
	Node0x558df72856f0:s0 -> Node0x558df7285a50;
	Node0x558df72856f0:s1 -> Node0x558df7285780;
	Node0x558df7285a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%225:\l225:                                              \l  call void @__asan_report_store1(i64 %215) #8\l  unreachable\l}"];
	Node0x558df7285780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%226:\l226:                                              \l  store i8 0, i8* %arrayidx36, align 8\l  %227 = bitcast i32* %i37 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %227) #3\l  store i32 0, i32* %i37, align 4\l  br label %for.cond38\l}"];
	Node0x558df7285780 -> Node0x558df7285fe0;
	Node0x558df7285fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.cond38:                                       \l  %228 = load i32, i32* %i37, align 4\l  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %228)\l  %cmp39 = icmp slt i32 %228, 4\l  br i1 %cmp39, label %for.body41, label %for.cond.cleanup40\l|{<s0>T|<s1>F}}"];
	Node0x558df7285fe0:s0 -> Node0x558df7286310;
	Node0x558df7285fe0:s1 -> Node0x558df7286360;
	Node0x558df7286360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{for.cond.cleanup40:                               \l  store i32 11, i32* %cleanup.dest.slot, align 4\l  %229 = bitcast i32* %i37 to i8*\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %229) #3\l  br label %for.end51\l}"];
	Node0x558df7286360 -> Node0x558df72867d0;
	Node0x558df7286310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.body41:                                       \l  %230 = load i32, i32* %i37, align 4\l  %add42 = add nsw i32 %230, 44\l  %add43 = add nsw i32 %add42, 16\l  %add44 = add nsw i32 %add43, 8\l  %idxprom45 = sext i32 %add44 to i64\l  %arrayidx46 = getelementptr inbounds [201 x i8], [201 x i8]* %14, i64 0, i64\l... %idxprom45\l  %231 = ptrtoint i8* %arrayidx46 to i64\l  %232 = lshr i64 %231, 3\l  %233 = add i64 %232, 2147450880\l  %234 = inttoptr i64 %233 to i8*\l  %235 = load i8, i8* %234, align 1\l  %236 = icmp ne i8 %235, 0\l  br i1 %236, label %237, label %242, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df7286310:s0 -> Node0x558df7286f00;
	Node0x558df7286310:s1 -> Node0x558df7286f50;
	Node0x558df7286f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%237:\l237:                                              \l  %238 = and i64 %231, 7\l  %239 = trunc i64 %238 to i8\l  %240 = icmp sge i8 %239, %235\l  br i1 %240, label %241, label %242\l|{<s0>T|<s1>F}}"];
	Node0x558df7286f00:s0 -> Node0x558df72871e0;
	Node0x558df7286f00:s1 -> Node0x558df7286f50;
	Node0x558df72871e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%241:\l241:                                              \l  call void @__asan_report_load1(i64 %231) #8\l  unreachable\l}"];
	Node0x558df7286f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%242:\l242:                                              \l  %243 = load i8, i8* %arrayidx46, align 1\l  %244 = load i32, i32* %i37, align 4\l  %idxprom47 = sext i32 %244 to i64\l  %arrayidx48 = getelementptr inbounds [201 x i8], [201 x i8]* %22, i64 0, i64\l... %idxprom47\l  %245 = ptrtoint i8* %arrayidx48 to i64\l  %246 = lshr i64 %245, 3\l  %247 = add i64 %246, 2147450880\l  %248 = inttoptr i64 %247 to i8*\l  %249 = load i8, i8* %248, align 1\l  %250 = icmp ne i8 %249, 0\l  br i1 %250, label %251, label %256, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df7286f50:s0 -> Node0x558df72879d0;
	Node0x558df7286f50:s1 -> Node0x558df7287a20;
	Node0x558df72879d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%251:\l251:                                              \l  %252 = and i64 %245, 7\l  %253 = trunc i64 %252 to i8\l  %254 = icmp sge i8 %253, %249\l  br i1 %254, label %255, label %256\l|{<s0>T|<s1>F}}"];
	Node0x558df72879d0:s0 -> Node0x558df7287cb0;
	Node0x558df72879d0:s1 -> Node0x558df7287a20;
	Node0x558df7287cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%255:\l255:                                              \l  call void @__asan_report_store1(i64 %245) #8\l  unreachable\l}"];
	Node0x558df7287a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%256:\l256:                                              \l  store i8 %243, i8* %arrayidx48, align 1\l  br label %for.inc49\l}"];
	Node0x558df7287a20 -> Node0x558df727e120;
	Node0x558df727e120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.inc49:                                        \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 32) to i32*)) #8\l  %257 = load i32, i32* %i37, align 4\l  %inc50 = add nsw i32 %257, 1\l  store i32 %inc50, i32* %i37, align 4\l  br label %for.cond38, !llvm.loop !34\l}"];
	Node0x558df727e120 -> Node0x558df7285fe0;
	Node0x558df72867d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{for.end51:                                        \l  %arrayidx52 = getelementptr inbounds [201 x i8], [201 x i8]* %22, i64 0, i64\l... 4\l  %258 = ptrtoint i8* %arrayidx52 to i64\l  %259 = lshr i64 %258, 3\l  %260 = add i64 %259, 2147450880\l  %261 = inttoptr i64 %260 to i8*\l  %262 = load i8, i8* %261, align 1\l  %263 = icmp ne i8 %262, 0\l  br i1 %263, label %264, label %269, !prof !31\l|{<s0>T|<s1>F}}"];
	Node0x558df72867d0:s0 -> Node0x558df72890f0;
	Node0x558df72867d0:s1 -> Node0x558df7289180;
	Node0x558df72890f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%264:\l264:                                              \l  %265 = and i64 %258, 7\l  %266 = trunc i64 %265 to i8\l  %267 = icmp sge i8 %266, %262\l  br i1 %267, label %268, label %269\l|{<s0>T|<s1>F}}"];
	Node0x558df72890f0:s0 -> Node0x558df7289450;
	Node0x558df72890f0:s1 -> Node0x558df7289180;
	Node0x558df7289450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4c66d670",label="{%268:\l268:                                              \l  call void @__asan_report_store1(i64 %258) #8\l  unreachable\l}"];
	Node0x558df7289180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%269:\l269:                                              \l  store i8 0, i8* %arrayidx52, align 4\l  %arraydecay53 = getelementptr inbounds [201 x i8], [201 x i8]* %22, i64 0,\l... i64 0\l  %call54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds (\{ [4 x\l... i8], [60 x i8] \}, \{ [4 x i8], [60 x i8] \}* @.str.8, i32 0, i32 0, i64 0), i8*\l... %arraydecay53)\l  %270 = bitcast i64* %x to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* %270) #3\l  %arraydecay55 = getelementptr inbounds [201 x i8], [201 x i8]* %18, i64 0,\l... i64 0\l  %call56 = call i64 @strtoull(i8* %arraydecay55, i8** null, i32 16) #3\l  store i64 %call56, i64* %x, align 8\l  %271 = load i64, i64* %x, align 8\l  call void @__sanitizer_cov_trace_const_cmp8(i64 -3819410105351357762, i64\l... %271)\l  %cmp57 = icmp ne i64 %271, -3819410105351357762\l  br i1 %cmp57, label %if.then58, label %if.end59\l|{<s0>T|<s1>F}}"];
	Node0x558df7289180:s0 -> Node0x558df727bc70;
	Node0x558df7289180:s1 -> Node0x558df727bd20;
	Node0x558df727bc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.then58:                                        \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 36) to i32*)) #8\l  store i32 1, i32* %retval, align 4\l  store i32 1, i32* %cleanup.dest.slot, align 4\l  br label %cleanup76\l}"];
	Node0x558df727bc70 -> Node0x558df72749c0;
	Node0x558df727bd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.end59:                                         \l  %272 = bitcast i32* %y to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %272) #3\l  %arraydecay60 = getelementptr inbounds [201 x i8], [201 x i8]* %20, i64 0,\l... i64 0\l  %call61 = call i64 @strtoul(i8* %arraydecay60, i8** null, i32 16) #3\l  %conv = trunc i64 %call61 to i32\l  store i32 %conv, i32* %y, align 4\l  %273 = load i32, i32* %y, align 4\l  call void @__sanitizer_cov_trace_const_cmp4(i32 -559038242, i32 %273)\l  %cmp62 = icmp ne i32 %273, -559038242\l  br i1 %cmp62, label %if.then63, label %if.end64\l|{<s0>T|<s1>F}}"];
	Node0x558df727bd20:s0 -> Node0x558df7275370;
	Node0x558df727bd20:s1 -> Node0x558df7275420;
	Node0x558df7275370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{if.then63:                                        \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 40) to i32*)) #8\l  store i32 1, i32* %retval, align 4\l  store i32 1, i32* %cleanup.dest.slot, align 4\l  br label %cleanup75\l}"];
	Node0x558df7275370 -> Node0x558df728cc40;
	Node0x558df7275420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{if.end64:                                         \l  %274 = bitcast i16* %z to i8*\l  call void @llvm.lifetime.start.p0i8(i64 2, i8* %274) #3\l  %arraydecay65 = getelementptr inbounds [201 x i8], [201 x i8]* %22, i64 0,\l... i64 0\l  %call66 = call i64 @strtouq(i8* %arraydecay65, i8** null, i32 16) #3\l  %conv67 = trunc i64 %call66 to i16\l  store i16 %conv67, i16* %z, align 2\l  %275 = load i16, i16* %z, align 2\l  %conv68 = zext i16 %275 to i32\l  %276 = zext i32 %conv68 to i64\l  call void @__sanitizer_cov_trace_switch(i64 %276, i64* getelementptr\l... inbounds ([5 x i64], [5 x i64]* @__sancov_gen_cov_switch_values.11, i32 0,\l... i32 0))\l  switch i32 %conv68, label %sw.default72 [\l    i32 48879, label %sw.bb69\l    i32 65259, label %sw.bb70\l    i32 61374, label %sw.bb71\l  ]\l|{<s0>def|<s1>48879|<s2>65259|<s3>61374}}"];
	Node0x558df7275420:s0 -> Node0x558df728d690;
	Node0x558df7275420:s1 -> Node0x558df728d740;
	Node0x558df7275420:s2 -> Node0x558df728d7f0;
	Node0x558df7275420:s3 -> Node0x558df728d8d0;
	Node0x558df728d740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{sw.bb69:                                          \l  br label %sw.epilog73\l}"];
	Node0x558df728d740 -> Node0x558df728d9f0;
	Node0x558df728d7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{sw.bb70:                                          \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 44) to i32*)) #8\l  store i32 1, i32* %retval, align 4\l  store i32 1, i32* %cleanup.dest.slot, align 4\l  br label %cleanup\l}"];
	Node0x558df728d7f0 -> Node0x558df728e610;
	Node0x558df728d8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{sw.bb71:                                          \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 48) to i32*)) #8\l  store i32 1, i32* %retval, align 4\l  store i32 1, i32* %cleanup.dest.slot, align 4\l  br label %cleanup\l}"];
	Node0x558df728d8d0 -> Node0x558df728e610;
	Node0x558df728d690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{sw.default72:                                     \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 52) to i32*)) #8\l  store i32 1, i32* %retval, align 4\l  store i32 1, i32* %cleanup.dest.slot, align 4\l  br label %cleanup\l}"];
	Node0x558df728d690 -> Node0x558df728e610;
	Node0x558df728d9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{sw.epilog73:                                      \l  call void @__sanitizer_cov_trace_pc_guard(i32* inttoptr (i64 add (i64\l... ptrtoint ([15 x i32]* @__sancov_gen_.10 to i64), i64 56) to i32*)) #8\l  %call74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds (\{ [33 x\l... i8], [63 x i8] \}, \{ [33 x i8], [63 x i8] \}* @.str.9, i32 0, i32 0, i64 0))\l  store i32 0, i32* %retval, align 4\l  store i32 1, i32* %cleanup.dest.slot, align 4\l  br label %cleanup\l}"];
	Node0x558df728d9f0 -> Node0x558df728e610;
	Node0x558df728e610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{cleanup:                                          \l  %277 = bitcast i16* %z to i8*\l  call void @llvm.lifetime.end.p0i8(i64 2, i8* %277) #3\l  br label %cleanup75\l}"];
	Node0x558df728e610 -> Node0x558df728cc40;
	Node0x558df728cc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{cleanup75:                                        \l  %278 = bitcast i32* %y to i8*\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #3\l  br label %cleanup76\l}"];
	Node0x558df728cc40 -> Node0x558df72749c0;
	Node0x558df72749c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{cleanup76:                                        \l  %279 = bitcast i64* %x to i8*\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %279) #3\l  %280 = bitcast [201 x i8]* %22 to i8*\l  %281 = add i64 %29, 118\l  %282 = inttoptr i64 %281 to i64*\l  store i64 -506381209866536712, i64* %282, align 1\l  %283 = add i64 %29, 126\l  %284 = inttoptr i64 %283 to i64*\l  store i64 -506381209866536712, i64* %284, align 1\l  %285 = add i64 %29, 134\l  %286 = inttoptr i64 %285 to i64*\l  store i64 -506381209866536712, i64* %286, align 1\l  %287 = add i64 %29, 142\l  %288 = inttoptr i64 %287 to i16*\l  store i16 -1800, i16* %288, align 1\l  call void @llvm.lifetime.end.p0i8(i64 201, i8* %280) #3\l  %289 = bitcast [201 x i8]* %20 to i8*\l  %290 = add i64 %29, 84\l  %291 = inttoptr i64 %290 to i64*\l  store i64 -506381209866536712, i64* %291, align 1\l  %292 = add i64 %29, 92\l  %293 = inttoptr i64 %292 to i64*\l  store i64 -506381209866536712, i64* %293, align 1\l  %294 = add i64 %29, 100\l  %295 = inttoptr i64 %294 to i64*\l  store i64 -506381209866536712, i64* %295, align 1\l  %296 = add i64 %29, 108\l  %297 = inttoptr i64 %296 to i16*\l  store i16 -1800, i16* %297, align 1\l  call void @llvm.lifetime.end.p0i8(i64 201, i8* %289) #3\l  %298 = bitcast [201 x i8]* %18 to i8*\l  %299 = add i64 %29, 50\l  %300 = inttoptr i64 %299 to i64*\l  store i64 -506381209866536712, i64* %300, align 1\l  %301 = add i64 %29, 58\l  %302 = inttoptr i64 %301 to i64*\l  store i64 -506381209866536712, i64* %302, align 1\l  %303 = add i64 %29, 66\l  %304 = inttoptr i64 %303 to i64*\l  store i64 -506381209866536712, i64* %304, align 1\l  %305 = add i64 %29, 74\l  %306 = inttoptr i64 %305 to i16*\l  store i16 -1800, i16* %306, align 1\l  call void @llvm.lifetime.end.p0i8(i64 201, i8* %298) #3\l  br label %cleanup80\l}"];
	Node0x558df72749c0 -> Node0x558df727c290;
	Node0x558df727c290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{cleanup80:                                        \l  %307 = bitcast [45 x i8]* %16 to i8*\l  %308 = add i64 %29, 40\l  %309 = inttoptr i64 %308 to i32*\l  store i32 -117901064, i32* %309, align 1\l  %310 = add i64 %29, 44\l  %311 = inttoptr i64 %310 to i16*\l  store i16 -1800, i16* %311, align 1\l  call void @llvm.lifetime.end.p0i8(i64 45, i8* %307) #3\l  %312 = bitcast %struct._IO_FILE** %fp to i8*\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %312) #3\l  %313 = bitcast [201 x i8]* %14 to i8*\l  %314 = add i64 %29, 6\l  %315 = inttoptr i64 %314 to i64*\l  store i64 -506381209866536712, i64* %315, align 1\l  %316 = add i64 %29, 14\l  %317 = inttoptr i64 %316 to i64*\l  store i64 -506381209866536712, i64* %317, align 1\l  %318 = add i64 %29, 22\l  %319 = inttoptr i64 %318 to i64*\l  store i64 -506381209866536712, i64* %319, align 1\l  %320 = add i64 %29, 30\l  %321 = inttoptr i64 %320 to i16*\l  store i16 -1800, i16* %321, align 1\l  call void @llvm.lifetime.end.p0i8(i64 201, i8* %313) #3\l  %322 = bitcast i8** %filename to i8*\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* %322) #3\l  %323 = bitcast i32* %12 to i8*\l  %324 = add i64 %29, 4\l  %325 = inttoptr i64 %324 to i8*\l  store i8 -8, i8* %325, align 1\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %323) #3\l  %326 = bitcast i32* %opt to i8*\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %326) #3\l  %327 = load i32, i32* %retval, align 4\l  store i64 1172321806, i64* %23, align 8\l  %328 = icmp ne i64 %5, 0\l  br i1 %328, label %329, label %330\l|{<s0>T|<s1>F}}"];
	Node0x558df727c290:s0 -> Node0x558df7292670;
	Node0x558df727c290:s1 -> Node0x558df7292700;
	Node0x558df7292670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%329:\l329:                                              \l  call void @__asan_stack_free_5(i64 %5, i64 1216)\l  br label %332\l}"];
	Node0x558df7292670 -> Node0x558df7292a40;
	Node0x558df7292700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%330:\l330:                                              \l  %331 = add i64 %29, 0\l  call void @__asan_set_shadow_00(i64 %331, i64 152)\l  br label %332\l}"];
	Node0x558df7292700 -> Node0x558df7292a40;
	Node0x558df7292a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%332:\l332:                                              \l  ret i32 %327\l}"];
}
